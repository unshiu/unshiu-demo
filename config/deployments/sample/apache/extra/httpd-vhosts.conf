#
# Virtual Hosts
#
# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at
# <URL:http://httpd.apache.org/docs/2.2/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# Use name-based virtual hosting.
#
NameVirtualHost *:80

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#
<VirtualHost *:80>
    DocumentRoot "<%= deploy_to %>/current/public"
		<Directory "<%= deploy_to %>/current/public">
		   Options FollowSymLinks
		   AllowOverride None
		   Order allow,deny
		   Allow from all
	 </Directory>
   
   # Block access to .svn directories
	 <DirectoryMatch "^/.*/(\.svn|csv|system/files)/.*">
	     ErrorDocument 403 /404.html
	     Order allow,deny
	     Deny from all
	     Satisfy All
	 </DirectoryMatch>
	
	 <Location /balancer-manager>
	     SetHandler balancer-manager
	     Order Deny,Allow
	     Deny from all
	     Allow From 127.0.0.1
	     Allow From <%= user_ip %>
	 </Location>
	 RewriteEngine On
	 RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
	 RewriteCond %{REQUEST_URI} !^/images/
	 RewriteCond %{REQUEST_URI} !^/javascripts/
	 RewriteCond %{REQUEST_URI} !^/stylesheets/
	 RewriteRule ^.*$ /system/maintenance.html [L]
   RewriteRule ^/(images|javascripts|stylesheets)/(.*)$ /$1/$2 [L]
	
	 RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f
	 RewriteRule (.*) $1 [L]

	 ProxyRequests Off
	 <Proxy *>
	    Order deny,allow
	    Allow from all
	 </Proxy>

	 #ProxyPass /awstats !
	 #ProxyPass /awstatsicons !
	 ProxyPass /balancer-manager !
	 
	 ProxyPass / balancer://unshiu/ stickysession=<%= apache_stickysession %> nofailover=On
	 ProxyPassReverse / balancer://unshiu/

	 <Proxy balancer://unshiu/>
		  <% 0.step mongrel_servers.to_i-1 do |n| %>
				BalancerMember http://<%= "#{mongrel_address}:#{mongrel_port.to_i + n}" %> loadfactor=10 route=<%= n %>
			<% end %>
	 </Proxy>
	
</VirtualHost>